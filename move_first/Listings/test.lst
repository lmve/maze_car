C51 COMPILER V9.60.0.0   TEST                                                              11/12/2022 20:45:27 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TEST
OBJECT MODULE PLACED IN .\Objects\test.obj
COMPILER INVOKED BY: D:\mdk\C51\BIN\C51.EXE test.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\te
                    -st.lst) TABS(2) OBJECT(.\Objects\test.obj)

line level    source

   1          #include <stdio.h>
   2          #include <reg52.h>
   3          /*
   4          * ?¡ã??¡ê??-¦Ì?¡Á¨®¨®¨°¡Áa
   5          * ?¨¬2a??¨¬?
   6          * ¨ºy?Y¡ä¡é¡ä?-¨ºy¡Á¨¦
   7          * ¡À¨¦¨¤¨²¡êo
   8            ¡Á¨®¨º?¡¤¡§?¨°¡êo¡Á¨®-?¡ã-¨®¨°-o¨®
   9            3?¨º???0????¡ê???3¡¥1o???¡ê??¨¬2a??¨¬?¡ê??????t??char¨ºy¡Á¨¦maze??0,0??¦Ì¨ª????1 
  10            ¡¤??¨°¦Ì¡Â¡Áa¡ê?3¡¥?¨°¨®D?¡¤¦Ì?¡¤??¨°?¡ê????¡¤??¨°¡À?¨¢?dirction
  11            for ?¡ã??¨°???¡ê???????wall???¡ã?????a¨¤¡ä?¡ä¡¤??¨°?¡ê
  12              
  13          * ?¡ã?¡¤¡êo
  14          * 3?¡ä¨¬¡êo
  15          */
  16          
  17          struct coordinate
  18          {
  19            int cX;
  20            int cY;
  21          };
  22          
  23          struct coordinate crossStack[24];
  24          
  25          
  26          
  27          sfr  P4=0xe8;
  28          sbit A0=P4^0;
  29          sbit A1=P2^0;
  30          sbit A2=P2^7;
  31          sbit irR1 = P2^1;
  32          sbit irR2 = P2^2;
  33          sbit irR3 = P2^3;
  34          sbit irR4 = P2^4;
  35          sbit irR5 = P2^5;
  36          sbit tubel1=P4^2;
  37          sbit tubel2=P4^3;
  38          sbit Buzzer = P2^4;
  39          bit irC1=0,irC2=0,irR=0;
  40          char  go[] = {0x19,0x38,0x2c,0x64,0x46,0xc2,0x83,0x91};
  41          char  back[] = {0x91,0x83,0xc2,0x46,0x64,0x2c,0x38,0x19};
  42          char i1,j1,i2;
  43          
  44          
  45          
  46          
  47          
  48          unsigned char coY=0,coX=0,step1=0,step2=15;                     //¨¨???D?3¦Ì¡Á?¡À¨º
  49          unsigned char dir=0,                          //D?3¦Ì¦Ì¡À?¡ã???¨°¦Ì?????¡¤??¨°
  50                  top=0,                          //???D?a????¨ºy¡ê??¡ä¡Á?o¨®¨°????a????¨®|¦Ì?¨ºy¡Á¨¦??¡À¨º+1
  51                  cX=0,cY=0;
  52          
  53          unsigned char   maze[8][8]={0,0,0,0,0,0,0,0,
  54                        0,0,0,0,0,0,0,0,
C51 COMPILER V9.60.0.0   TEST                                                              11/12/2022 20:45:27 PAGE 2   

  55                        0,0,0,0,0,0,0,0,
  56                        0,0,0,0,0,0,0,0,
  57                        0,0,0,0,0,0,0,0,
  58                        0,0,0,0,0,0,0,0,
  59                        0,0,0,0,0,0,0,0,
  60                        0,0,0,0,0,0,0,0};                   //¡äy¨¬?2a??1?
  61          /*unsigned char realMaze[8][8]={0x0d,0x05,0x03,0x0d,0x05,0x01,0x03,0x0b,
  62                                        0x09,0x05,0x00,0x05,0x05,0x06,0x0a,0x0a,
  63                                        0x0a,0x0d,0x04,0x01,0x05,0x01,0x04,0x06,
  64                                        0x0a,0x0d,0x05,0x00,0x05,0x04,0x01,0x03,
  65                                        0x0c,0x05,0x03,0x08,0x05,0x07,0x0a,0x0a,
  66                                        0x09,0x01,0x04,0x04,0x01,0x03,0x0a,0x0e,
  67                                        0x0a,0x0a,0x0d,0x05,0x02,0x08,0x04,0x07,
  68                                        0x0e,0x0c,0x05,0x05,0x06,0x0c,0x05,0x07,};*/  //?¡ê?a??¨º¦Ì??1?
  69          
  70          unsigned char   wall[4][3]={0x08,0x01,0x02, 
  71                        0x01,0x02,0x04,
  72                        0x02,0x04,0x08,
  73                        0x04,0x08,0x01};                //[dir][¡Á¨®0/?D1/¨®¨°2/]¡ê?
  74          
  75          void Delay(int x)   
  76          {
  77   1        char i, j;
  78   1        for(x;x>0;x--)
  79   1        {
  80   2            i = 2;
  81   2            j = 199;
  82   2            do
  83   2            {
  84   3              while (--j);
  85   3            } while (--i);
  86   2        }
  87   1      }
  88          void MOUSE_IR_ON(int a)      
  89          { 
  90   1        A0=(a)&0x01;
  91   1        A1=(a)&0x02;
  92   1        A2=(a)&0x04;
  93   1      }
  94          void setTime2(unsigned int us)
  95          {
  96   1        TH2=(65536-us)/256;
  97   1        RCAP2H=(65536-us)/256;
  98   1        TL2=(65536-us)%256;
  99   1        RCAP2L=(65536-us)%256;
 100   1      }
 101          void initTime2()
 102          {
 103   1        EA=1;
 104   1        ET2=1;
 105   1        setTime2(5000);
 106   1        TR2=1;
 107   1      }
 108          
 109          void lightNumber(int x,int num)
 110          {
 111   1        char Number[] = {0xC0,0xCF,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};
 112   1        switch(x)
 113   1        {
 114   2          case 1:tubel1=1;tubel2=0;break;
 115   2          case 2:tubel1=0;tubel2=1;break;
 116   2        }
C51 COMPILER V9.60.0.0   TEST                                                              11/12/2022 20:45:27 PAGE 3   

 117   1        P0=Number[num];
 118   1        Delay(5);
 119   1      }
 120          unsigned char check(int flag);
 121          void run(bit f)
 122          {
 123   1        if(f) 
 124   1        {
 125   2          for(j1=0;j1<110;j1++)
 126   2            {
 127   3              for(i1=0;i1<8;i1++)
 128   3                  {
 129   4                    P1=(go[i1] );
 130   4                    Delay(3);
 131   4                  }
 132   3                  if(j1%20==0)
 133   3                  {
 134   4                    
 135   4                    if(check(4)&&(!check(0)))
 136   4                    {
 137   5                      //lightNumber(1,8);
 138   5                      //lightNumber(2,8);
 139   5                      for(i2=0;i2<3;i2++)
 140   5                      {
 141   6                        for(i1=0;i1<8;i1++)
 142   6                        {
 143   7                          P1=(go[i1]|0xf0);
 144   7                          P1=P1&(back[i1]|0x0f);
 145   7                          Delay(6);
 146   7                        }
 147   6                      }
 148   5                      j1-=1;
 149   5                      Delay(200);
 150   5                    }
 151   4                  }
 152   3                  if(j1%25==0)
 153   3                    {
 154   4                    if(check(1)&&(!check(0)))
 155   4                    {
 156   5                      //lightNumber(1,7);
 157   5                      //lightNumber(2,7);
 158   5                      for(i2=0;i2<3;i2++)
 159   5                      {
 160   6                        for(i1=0;i1<8;i1++)
 161   6                        {
 162   7                          P1=(back[i1]|0xf0);
 163   7                          P1=P1&(go[i1]|0x0f);
 164   7                          Delay(6);
 165   7                        } 
 166   6                        
 167   6                      }
 168   5                      j1-=1;
 169   5                      Delay(200);
 170   5                     }    
 171   4                    }
 172   3                              
 173   3                }
 174   2      
 175   2        }
 176   1      }
 177          
 178          
C51 COMPILER V9.60.0.0   TEST                                                              11/12/2022 20:45:27 PAGE 4   

 179          
 180          
 181          void goForward ()
 182          {
 183   1        switch (dir)
 184   1        {
 185   2        case 0:coY--;break;
 186   2        case 1:coX++;break;
 187   2        case 2:coY++;break;
 188   2        case 3:coX--;break;
 189   2        default:
 190   2          break;
 191   2        }
 192   1        run(1);
 193   1      } 
 194          void goBack ()
 195          {
 196   1        switch (dir)
 197   1        {
 198   2        case 0:coY++;break;
 199   2        case 1:coX--;break;
 200   2        case 2:coY--;break;
 201   2        case 3:coX++;break;
 202   2        default:
 203   2          break;
 204   2        }
 205   1      } 
 206          void turnLeft() 
 207          {
 208   1        switch (dir)
 209   1        {
 210   2        case 0:dir=3;break;
 211   2        case 1:dir=0;break;
 212   2        case 2:dir=1;break;
 213   2        case 3:dir=2;break;
 214   2        default:
 215   2          break;
 216   2        }
 217   1        for(j1=0;j1<52;j1++)
 218   1              {
 219   2                for(i1=0;i1<8;i1++)
 220   2                    {
 221   3                    P1=(go[i1]|0xf0);
 222   3                    P1=P1&(back[i1]|0x0f);
 223   3                    Delay(3);
 224   3                    }
 225   2              }
 226   1      }
 227          void turnRight() 
 228          {
 229   1        switch (dir)
 230   1        {
 231   2        case 0:dir=1;break;
 232   2        case 1:dir=2;break;
 233   2        case 2:dir=3;break;
 234   2        case 3:dir=0;break;
 235   2        default:
 236   2          break;
 237   2        }
 238   1        for(j1=0;j1<52;j1++)
 239   1              {
 240   2                for(i1=0;i1<8;i1++)
C51 COMPILER V9.60.0.0   TEST                                                              11/12/2022 20:45:27 PAGE 5   

 241   2                    {
 242   3                    P1=(back[i1]|0xf0);
 243   3                    P1=P1&(go[i1]|0x0f);
 244   3                    Delay(3);
 245   3                    }
 246   2              }
 247   1      }
 248          void turnBack()
 249          {
 250   1        switch (dir)
 251   1        {
 252   2        case 0:dir=2;break;
 253   2        case 1:dir=3;break;
 254   2        case 2:dir=0;break;
 255   2        case 3:dir=1;break;
 256   2        default:
 257   2          break;
 258   2        }
 259   1        for(j1=0;j1<54;j1++)
 260   1              {
 261   2                for(i1=0;i1<8;i1++)
 262   2                    {
 263   3                    P1=(back[i1]|0xf0);
 264   3                    P1=P1&(go[i1]|0x0f);
 265   3                    Delay(3);
 266   3                    }
 267   2              }
 268   1        for(j1=0;j1<54;j1++)
 269   1              {
 270   2                for(i1=0;i1<8;i1++)
 271   2                    {
 272   3                    P1=(back[i1]|0xf0);
 273   3                    P1=P1&(go[i1]|0x0f);
 274   3                    Delay(3);
 275   3                    }
 276   2              }
 277   1      }
 278          
 279          unsigned char check(int flag)
 280          {
 281   1        MOUSE_IR_ON(flag);
 282   1        Delay(10);
 283   1        switch (flag)
 284   1          {
 285   2            case 0:
 286   2                    if(irR1){}
 287   2                    else{return 1;} break;//forward
 288   2            case 1:
 289   2                    if(irR2){}
 290   2                    else{return 1;} break;
 291   2            case 2:
 292   2                    if(irR3){}
 293   2                    else{return 1;} break;//left
 294   2            case 3:
 295   2                    if(irR4){}
 296   2                    else{Delay(50);return 1;} break;//right
 297   2            case 4:
 298   2                    if(irR5){}
 299   2                    else{return 1;} break;
 300   2          }
 301   1      }
 302          int checkLeft(unsigned char * x)
C51 COMPILER V9.60.0.0   TEST                                                              11/12/2022 20:45:27 PAGE 6   

 303          {
 304   1        
 305   1        
 306   1        if(check(2))
 307   1        {
 308   2          (*x)=(*x)|wall[dir][0];
 309   2          return 0;
 310   2        }
 311   1          
 312   1        else
 313   1          return 2;
 314   1      }
 315          int checkFront(unsigned char * x)
 316          {
 317   1        
 318   1        Delay(50);
 319   1        if(check(0))
 320   1        {
 321   2          (*x)=(*x)|wall[dir][1];
 322   2          return 0;
 323   2        }
 324   1        switch(dir)
 325   1        {
 326   2          case 0: if((maze[coY-1][coX])!=0)
 327   2              {
 328   3              //printf("??¨°???¨°??-¡Á?1y¡ê??¡ä¡Á¡Â?a??¡ê?2???¨ºy?Y");
 329   3              return 0;
 330   3              }break;
 331   2          case 1: if((maze[coY][coX+1])!=0)
 332   2              {
 333   3              //printf("??¨°???¨°??-¡Á?1y¡ê??¡ä¡Á¡Â?a??¡ê?2???¨ºy?Y");
 334   3              return 0;
 335   3              }break;
 336   2          case 2: if((maze[coY+1][coX])!=0)
 337   2              {
 338   3              //printf("??¨°???¨°??-¡Á?1y¡ê??¡ä¡Á¡Â?a??¡ê?2???¨ºy?Y");
 339   3              return 0;
 340   3              }break;
 341   2          case 3: if((maze[coY][coX-1])!=0)
 342   2              {
 343   3              //printf("??¨°???¨°??-¡Á?1y¡ê??¡ä¡Á¡Â?a??¡ê?2???¨ºy?Y");
 344   3              return 0;
 345   3              }break;          
 346   2          }
 347   1        return 3;
 348   1      }
 349          int checkRight(unsigned char * x)
 350          {
 351   1        
 352   1        Delay(50);
 353   1        if(check(3))
 354   1        {
 355   2          (*x)=(*x)|wall[dir][2];
 356   2          return 0;
 357   2        }
 358   1        
 359   1        else
 360   1        {;
 361   2         return 4;
 362   2        }
 363   1      }
 364          void recordRoad(unsigned char * x)
C51 COMPILER V9.60.0.0   TEST                                                              11/12/2022 20:45:27 PAGE 7   

 365          {
 366   1        unsigned char origin =0;
 367   1        if(((*x)&0xf0)>0)
 368   1        return;
 369   1        switch (dir)
 370   1        {
 371   2        case 0:(*x)=(*x)|0x40;break;
 372   2        case 1:(*x)=(*x)|0x80;break;
 373   2        case 2:(*x)=(*x)|0x10;break;
 374   2        case 3:(*x)=(*x)|0x20;break;
 375   2        default:
 376   2          break;
 377   2        }
 378   1      
 379   1      }
 380          int checkWall(unsigned char * x)
 381          {
 382   1        recordRoad(x);
 383   1        return checkRight(x)+checkLeft(x)+checkFront(x);
 384   1      }
 385          void adjustDir(int choice)
 386          {
 387   1        if(choice==3)
 388   1        {
 389   2          //printf("¡Á¨®¨®¨°¨®D??¡ê??¡ã¡¤??T??¡ê?¡À¡ê3?¡¤??¨°\n"); 
 390   2          return;
 391   2        }
 392   1        
 393   1        if ( choice==2)
 394   1        {
 395   2          //printf("¨°¨°¨®D????¡Á¨®¡Áa\n"); 
 396   2          turnLeft();
 397   2          return;
 398   2        }
 399   1        if ( choice==4)
 400   1        {
 401   2          //printf("¨°¨°¨®D????¨®¨°¡Áa\n");
 402   2          turnRight();
 403   2          return;
 404   2        }
 405   1      }
 406          void recordCrossing()
 407          {
 408   1        int crossChoice=0;
 409   1        switch(dir)
 410   1        {
 411   2          case 0:
 412   2              //printf("3¡¥?¨°?a%d¨º¡À¦Ì?2¨ª?¡¤????\n",dir);
 413   2              if((maze[coY][coX]&0x08)==0)
 414   2              {
 415   3                if((maze[coY][coX-1])==0)
 416   3                crossChoice+=2; 
 417   3                
 418   3              }
 419   2              if((maze[coY][coX]&0x01)==0)
 420   2              {
 421   3                if((maze[coY-1][coX])==0)
 422   3                  crossChoice+=3;
 423   3                  //printf("?¡¤?¨²2?¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 424   3              }
 425   2              if((maze[coY][coX]&0x02)==0)
 426   2              {
C51 COMPILER V9.60.0.0   TEST                                                              11/12/2022 20:45:27 PAGE 8   

 427   3                if((maze[coY][coX+1])==0)
 428   3                  crossChoice+=4;
 429   3                  //printf("?¡¤?¨²¨®¨°¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 430   3              }break;
 431   2          case 1:
 432   2              //printf("3¡¥?¨°?a%d¨º¡À¦Ì?2¨ª?¡¤????\n",dir);
 433   2              if((maze[coY][coX]&0x01)==0)
 434   2              {
 435   3                if((maze[coY-1][coX])==0)
 436   3                crossChoice+=2; 
 437   3                  //printf("?¡¤?¨²¡Á¨®¡Áa¡ê?3¡¥?¨°?a%d",dir);
 438   3              }
 439   2              if((maze[coY][coX]&0x02)==0)
 440   2              {
 441   3                //printf("2¨ª?¡¤?????¨¬2a¨®???¡ê??¡ã¡¤??T??\n");
 442   3                if((maze[coY][coX+1])==0)
 443   3                {
 444   4                  crossChoice+=3;
 445   4                  
 446   4                } 
 447   3              }
 448   2              if((maze[coY][coX]&0x04)==0)
 449   2              {
 450   3                if((maze[coY+1][coX])==0)
 451   3                  crossChoice+=4;
 452   3                  //printf("?¡¤?¨²¨®¨°¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 453   3              }break;
 454   2          case 2:
 455   2              //printf("3¡¥?¨°?a%d¨º¡À¦Ì?2¨ª?¡¤????\n",dir);
 456   2              if((maze[coY][coX]&0x02)==0)
 457   2              {
 458   3                if((maze[coY][coX+1])==0)
 459   3                {
 460   4                  crossChoice+=2; 
 461   4                }
 462   3              }
 463   2              if((maze[coY][coX]&0x04)==0)
 464   2              {
 465   3                if((maze[coY+1][coX])==0)
 466   3                  crossChoice+=3;
 467   3                  //printf("?¡¤?¨²2?¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 468   3              }
 469   2              if((maze[coY][coX]&0x08)==0)
 470   2              {
 471   3                if((maze[coY][coX-1])==0)
 472   3                  crossChoice+=4;
 473   3                  //printf("?¡¤?¨²¨®¨°¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 474   3              }break;
 475   2          case 3:
 476   2              //printf("3¡¥?¨°?a%d¨º¡À¦Ì?2¨ª?¡¤????\n",dir);
 477   2              if((maze[coY][coX]&0x04)==0)
 478   2              {
 479   3                if((maze[coY+1][coX])==0)
 480   3                crossChoice+=2; 
 481   3                  //printf("?¡¤?¨²¡Á¨®¡Áa¡ê?3¡¥?¨°?a%d",dir);
 482   3              }
 483   2              if((maze[coY][coX]&0x08)==0)
 484   2              {
 485   3                if((maze[coY][coX-1])==0)
 486   3                  crossChoice+=3;
 487   3                  //printf("?¡¤?¨²2?¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 488   3              }
C51 COMPILER V9.60.0.0   TEST                                                              11/12/2022 20:45:27 PAGE 9   

 489   2              if((maze[coY][coX]&0x01)==0)
 490   2              {
 491   3                if((maze[coY-1][coX])==0)
 492   3                  crossChoice+=4;
 493   3                  //printf("?¡¤?¨²¨®¨°¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 494   3              }break;
 495   2            default:
 496   2              crossChoice=15;
 497   2            break;
 498   2        }
 499   1        if(crossChoice==2||crossChoice==3||crossChoice==4)
 500   1        {
 501   2          //lightNumber(1,9);
 502   2        }
 503   1        if(crossChoice==3||crossChoice==7)
 504   1        {
 505   2          //printf("?¡¤?¨²2?¡Áa¡ê?3¡¥?¨°?a%d\n",dir);
 506   2          //crossChoice=0;
 507   2        }
 508   1        if(crossChoice==2||crossChoice==5||crossChoice==6||crossChoice==9)
 509   1        {
 510   2          turnLeft();
 511   2          //printf("?¡¤?¨²¡Á¨®¡Áa¡ê?3¡¥?¨°?a%d\n",dir); 
 512   2          //crossChoice=0;
 513   2        }
 514   1        if(crossChoice==4)
 515   1        {
 516   2          turnRight();
 517   2          //printf("?¡¤?¨²¨®¨°¡Áa¡ê?3¡¥?¨°?a%d\n",dir); 
 518   2          //crossChoice=0;
 519   2        }
 520   1        //printf("??2¨ª?¡¤?¨²¡ä|¦Ì?crossChoice?a%d\n",crossChoice);
 521   1        
 522   1        if(crossChoice==5||crossChoice==6||crossChoice==7||crossChoice==9)
 523   1        {
 524   2          //printf("2¨ª?¡¤?¨²?D??3?¡ä¨ª¡ê???¦Ì??¨´¡ä?¨¨???\n"); 
 525   2          top++;
 526   2          crossStack[top].cX=coX;
 527   2          crossStack[top].cY=coY;
 528   2          //printf("??2¨ª?¡¤?¨²??%d,%d??¡¤?¨¨????D,¡ä?¨º¡À??top?a%d\n",coX,coY,top);
 529   2        }
 530   1        crossChoice=0; 
 531   1        
 532   1      }
 533          void reBackCrossing()
 534          {
 535   1        crossStack[top].cX=0;
 536   1        crossStack[top].cY=0; 
 537   1        top--;
 538   1      }
 539          
 540          void returnWay()
 541          {
 542   1        //printf("?¨°?¨¤??¨¦¨²¡ê??a¨º????Y\n");
 543   1        turnBack();
 544   1        //printf("???Y¦Ì¨²¨°?2?¡ê?¡Áa¨ª¡¤\n");
 545   1        while((coX != crossStack[top].cX)||(coY != crossStack[top].cY))
 546   1        {
 547   2          
 548   2          switch(dir)
 549   2          {
 550   3          case 0:
C51 COMPILER V9.60.0.0   TEST                                                              11/12/2022 20:45:27 PAGE 10  

 551   3              //printf("3¡¥?¨°?a%d¨º¡À¦Ì????Y\n",dir);
 552   3              if((maze[coY][coX]&0x10)>0)
 553   3              {
 554   4                  //printf("???Y2?¡Áa¡ê?3¡¥?¨°?a%d",dir);
 555   4              }
 556   3              if((maze[coY][coX]&0x80)>0)
 557   3              {
 558   4                turnLeft();
 559   4                //printf("???Y¡Á¨®¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 560   4              }
 561   3              if((maze[coY][coX]&0x20)>0)
 562   3              {
 563   4                turnRight();
 564   4                //printf("?¡¤?¨²¨®¨°¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 565   4              }break;
 566   3          case 1:
 567   3              //printf("3¡¥?¨°?a%d¨º¡À¦Ì????Y\n",dir);
 568   3              if((maze[coY][coX]&0x20)>0)
 569   3              {
 570   4                //printf("???Y2?¡Áa¡ê?3¡¥?¨°?a%d",dir);
 571   4              }
 572   3              if((maze[coY][coX]&0x10)>0)
 573   3              {
 574   4                turnLeft();
 575   4                //printf("???Y¡Á¨®¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 576   4              }
 577   3              if((maze[coY][coX]&0x40)>0)
 578   3              {
 579   4                turnRight();
 580   4                //printf("???Y¨®¨°¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 581   4              }break;
 582   3          case 2:
 583   3              //printf("3¡¥?¨°?a%d¨º¡À¦Ì????Y\n",dir);
 584   3              if((maze[coY][coX]&0x40)>0)
 585   3              {
 586   4                //printf("???Y2?¡Áa¡ê?3¡¥?¨°?a%d",dir);
 587   4              }
 588   3              else if((maze[coY][coX]&0x20)>0)
 589   3              {
 590   4                turnLeft();
 591   4                //printf("???Y¡Á¨®¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 592   4              }
 593   3              else if((maze[coY][coX]&0x80)>0)
 594   3              {
 595   4                turnRight();
 596   4                //printf("???Y¨®¨°¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 597   4              }
 598   3              else 
 599   3              {
 600   4                //printf("3???¡ä¨ª?¨®¡ê?2??a¦Ì¨¤¨ª¨´??¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 601   4              }break;
 602   3          case 3:
 603   3              //printf("3¡¥?¨°?a%d¨º¡À¦Ì????Y\n",dir);
 604   3              if((maze[coY][coX]&0x80)>0)
 605   3              {
 606   4                  //printf("???Y2?¡Áa¡ê?3¡¥?¨°?a%d",dir);
 607   4              }
 608   3              if((maze[coY][coX]&0x40)>0)
 609   3              {
 610   4                turnLeft();
 611   4                //printf("???Y¡Á¨®¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 612   4              }
C51 COMPILER V9.60.0.0   TEST                                                              11/12/2022 20:45:27 PAGE 11  

 613   3              if((maze[coY][coX]&0x10)>0)
 614   3              {
 615   4                turnRight();
 616   4                //printf("?¡¤?¨²¨®¨°¡Áa¡ê?3¡¥?¨°?a%d",dir); 
 617   4              }break;
 618   3          }
 619   2          goForward();
 620   2          //printf("¦Ì¡À?¡ã???Yo¨®¡Á?¡À¨º??%d,%d??",coX,coY);
 621   2          if(coX>10||coY>10)                              //1¨º???¨¬2aDD 
 622   2          {
 623   3            return; 
 624   3          } 
 625   2        }
 626   1      
 627   1        top--;
 628   1        
 629   1      }
 630          void comeBack()
 631            {
 632   1          top=1;
 633   1          returnWay();
 634   1          turnBack();
 635   1        } 
 636          void findOneRoad2(unsigned char s)
 637          {
 638   1        //printf("???%d?,?????2??,??????%d,%d?\n",s,coX,coY) ;  
 639   1        //printf("???????,,maze?[%X]????%d?\n",maze[coY][coX],maze[coY][coX]&0xf1) ;  
 640   1          if((maze[coY][coX]&0xf1)==0&&((maze[coY-1][coX]&0xf0)==0))
 641   1          {
 642   2            //printf("2[%d,%d]?????2\n",coX,coY);
 643   2            crossStack[step2].cX=coX;
 644   2            crossStack[step2].cY=coY-1;
 645   2            //maze[coY][coX]=(maze[coY][coX]|(s*16));
 646   2            step2++;
 647   2          }
 648   1          if((maze[coY][coX]&0xf2)==0&&((maze[coY][coX+1]&0xf0)==0))
 649   1          {
 650   2            //printf("2[%d,%d]?????2\n",coX,coY);
 651   2            crossStack[step2].cX=coX+1;
 652   2            crossStack[step2].cY=coY;
 653   2            //maze[coY][coX]=(maze[coY][coX]|(s*16));
 654   2            step2++;
 655   2          }
 656   1          if((maze[coY][coX]&0xf4)==0&&((maze[coY+1][coX]&0xf0)==0))
 657   1          {
 658   2            //printf("2[%d,%d]?????2\n",coX,coY);
 659   2            crossStack[step2].cX=coX;
 660   2            crossStack[step2].cY=coY+1;
 661   2            //maze[coY][coX]=(maze[coY][coX]|(s*16));
 662   2            step2++;
 663   2          }
 664   1          if((maze[coY][coX]&0xf8)==0&&((maze[coY][coX-1]&0xf0)==0))
 665   1          {
 666   2            //printf("2[%d,%d]?????2\n",coX,coY);
 667   2            crossStack[step2].cX=coX-1;
 668   2            crossStack[step2].cY=coY;
 669   2            //maze[coY][coX]=(maze[coY][coX]|(s*16));
 670   2            step2++;
 671   2          }
 672   1          maze[coY][coX]=(maze[coY][coX]|(s*16));
 673   1      }
 674          void findOneRoad1(unsigned char s)
C51 COMPILER V9.60.0.0   TEST                                                              11/12/2022 20:45:27 PAGE 12  

 675          {
 676   1        //printf("???%d?,?????1??,??????%d,%d?\n",s,coX,coY) ;
 677   1        if((maze[coY][coX]&0xf1)==0&&((maze[coY-1][coX]&0xf0)==0))
 678   1          {
 679   2            //printf("1[%d,%d]?????1\n",coX,coY);
 680   2            crossStack[step1].cX=coX;
 681   2            crossStack[step1].cY=coY-1;
 682   2            //maze[coY][coX]=(maze[coY][coX]|(s*16));
 683   2            step1++;
 684   2          }
 685   1          if((maze[coY][coX]&0xf2)==0&&((maze[coY][coX+1]&0xf0)==0))
 686   1          {
 687   2            //printf("1[%d,%d]?????1\n",coX,coY);
 688   2            crossStack[step1].cX=coX+1;
 689   2            crossStack[step1].cY=coY;
 690   2            //maze[coY][coX]=(maze[coY][coX]|(s*16));
 691   2            step1++;
 692   2          }
 693   1          if((maze[coY][coX]&0xf4)==0&&((maze[coY+1][coX]&0xf0)==0))
 694   1          {
 695   2            //printf("1[%d,%d]?????1\n",coX,coY);
 696   2            crossStack[step1].cX=coX;
 697   2            crossStack[step1].cY=coY+1;
 698   2            //maze[coY][coX]=(maze[coY][coX]|(s*16));
 699   2            step1++;
 700   2          }
 701   1          if((maze[coY][coX]&0xf8)==0&&((maze[coY][coX-1]&0xf0)==0))
 702   1          {
 703   2            //printf("1[%d,%d]?????1\n",coX,coY);
 704   2            crossStack[step1].cX=coX-1;
 705   2            crossStack[step1].cY=coY;
 706   2            //maze[coY][coX]=(maze[coY][coX]|(s*16));
 707   2            step1++;
 708   2          }
 709   1          maze[coY][coX]=(maze[coY][coX]|(s*16));
 710   1      }
 711          
 712          void setRoad()
 713          {
 714   1        //printf("?????[%d,%d]\n",coX,coY);
 715   1        while(coX!=0||coY!=0)
 716   1        {
 717   2          //printf("????%X??????%d\n",maze[coY][coX-1],maze[coY][coX-1]&0xf8);
 718   2          if((maze[coY][coX-1]&0xf0)==(dir-1)*16&&(maze[coY][coX]&0x08)==0)
 719   2          {
 720   3            //printf("??????????[%d,%d]\n",coX-1,coY);
 721   3            dir--;
 722   3            maze[coY][coX-1]=(maze[coY][coX-1]&0x0f);
 723   3            maze[coY][coX-1]=(maze[coY][coX-1]|0x20);
 724   3            coX--; 
 725   3            continue;
 726   3          }
 727   2          //printf("????%X??????%d\n",maze[coY-1][coX],maze[coY-1][coX]&0xf1);
 728   2          if((maze[coY-1][coX]&0xf0)==(dir-1)*16&&(maze[coY][coX]&0x01)==0)
 729   2          {
 730   3            //printf("??????????[%d,%d]\n",coX,coY-1);
 731   3            maze[coY-1][coX]=(maze[coY-1][coX]&0x0f);
 732   3            maze[coY-1][coX]=(maze[coY-1][coX]|0x40);
 733   3            coY--;
 734   3            dir--;
 735   3          }
 736   2        }
C51 COMPILER V9.60.0.0   TEST                                                              11/12/2022 20:45:27 PAGE 13  

 737   1        dir=3;
 738   1        top=1;
 739   1        crossStack[1].cX=7;
 740   1        crossStack[1].cY=7;
 741   1        //printf("****??????,????****\n   ?????%d,%d?,dir?%d,top?%d",coX,coY,dir,top);
 742   1      }
 743          void findRoad()
 744          {
 745   1        //printf("*****????*****\n[%d,%d]\n",coX,coY);
 746   1        findOneRoad1(1);
 747   1        
 748   1        for(dir=2;dir<15;dir++)
 749   1        {
 750   2          
 751   2          if(step1==0&&step2==15)
 752   2          {
 753   3            //printf("????,?????%d,%d?\n",coX,coY); 
 754   3          }
 755   2          while(step1>0)
 756   2          {
 757   3            step1--;
 758   3            coX=crossStack[step1].cX;
 759   3            coY=crossStack[step1].cY;
 760   3            //printf("????111,???%d,%d?,?????%d?\n",coX,coY,step1); 
 761   3            findOneRoad2(dir);
 762   3            
 763   3          }
 764   2          dir++;
 765   2          while(step2>15)
 766   2          {
 767   3            step2--;
 768   3            coX=crossStack[step2].cX;
 769   3            coY=crossStack[step2].cY;
 770   3            //printf("????222,???%d,%d?,?????%d?\n",coX,coY,step2); 
 771   3            findOneRoad1(dir);  
 772   3          }
 773   2          if(coX==7&&coY==7)
 774   2          {
 775   3            
 776   3            
 777   3            //printf("?????%d,%d?",coX,coY);
 778   3            break; 
 779   3          }
 780   2        
 781   2        }
 782   1        //printf("\n*****?????????,????,??????*****\n");
 783   1        setRoad();
 784   1        returnWay(); 
 785   1        
 786   1      }
 787          void main()
 788          {   
 789   1        int i=3,choice =0,j=0,k=0;
 790   1        dir=1;
 791   1        //printf("¡¤?¨¨?D?3¦Ì¡ê??¨¬2a??¨¬?.\n");
 792   1        top=1;
 793   1        crossStack[top].cX=0;
 794   1        crossStack[top].cY=0;
 795   1        
 796   1        for(i=1;i<77;i++)
 797   1        {
 798   2          //printf("****¦Ì¨²%d¡ä??-?¡¤****\n???¨²¡Á?¡À¨º?a??%d,%d??,3¡¥?¨°¡êo%d,??¨º¦Ì??1??a%X\n",i,coX,coY,dir,re
C51 COMPILER V9.60.0.0   TEST                                                              11/12/2022 20:45:27 PAGE 14  

             -alMaze[coY][coX]);
 799   2          lightNumber(1,coY);
 800   2          lightNumber(2,coX);
 801   2          if(coX>8)
 802   2            lightNumber(2,9);
 803   2          choice = checkWall(&maze[coY][coX]); 
 804   2          //printf("choice?a%d\n",choice); 
 805   2          switch (choice)
 806   2          {
 807   3          case 0:
 808   3              //printf("?¡ã¦Ì??¨¤?¡¤\n"); 
 809   3              returnWay();
 810   3              break;
 811   3          case 1:
 812   3              //printf("??¨¬??¨¬2a?¨¢1??a¨°?¡ê?¨°¨¦??3?¡ä¨ª\n"); 
 813   3              break;
 814   3          case 2:
 815   3          case 3:
 816   3          case 4:
 817   3              adjustDir(choice);
 818   3              //printf("?¡ã¦Ì?¦Ì£¤¨°??¡¤\n");
 819   3              goForward();
 820   3              //printf("     ?¡ã??¡ê?\n");
 821   3              break;
 822   3          case 5:
 823   3          case 6:
 824   3          case 7:
 825   3          case 9:
 826   3              //printf("D??¡é?a%X\n",maze[coY][coX]);
 827   3              recordCrossing();
 828   3              goForward();
 829   3              //printf("     ?¡ã??¡ê?\n");
 830   3              break;
 831   3              
 832   3          default:
 833   3            break;
 834   3          }
 835   2        }
 836   1        top=1;
 837   1        returnWay(); 
 838   1        for(j=0;j<8;j++)
 839   1          {
 840   2            for(k=0;k<8;k++)
 841   2            {
 842   3              maze[j][k]=(maze[j][k]&0x0f);
 843   3            }
 844   2          }
 845   1          maze[0][0]=(0x0d);
 846   1        dir=0;
 847   1        comeBack();
 848   1        findRoad();
 849   1      }
*** WARNING C291 IN LINE 301 OF test.c: not every exit path returns a value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5411    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =    199      40
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   TEST                                                              11/12/2022 20:45:27 PAGE 15  

   BIT SIZE         =      3       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
